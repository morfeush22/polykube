{{- $test_targets_escaped := dict -}}

{{- range $test_target := (getenv "TEST_TARGETS" | yamlArray) -}}
{{- $test_targets_escaped = merge $test_targets_escaped (dict (strings.ReplaceAll "/" "_" $test_target) $test_target) -}}
{{- end -}}

{{- $parallelism := getenv "PARALLELISM" "" -}}
{{- $timeout := getenv "TIMEOUT" "" -}}

all: tests

tests: {{ join (keys $test_targets_escaped) " " }}

{{ range $key, $value := $test_targets_escaped }}
{{ $key }}:
	cd {{ $value }} && go test \
		{{ if ne $parallelism "" }}-parallel {{ $parallelism }}{{ end }} \
		{{ if ne $timeout "" }}-timeout {{ $timeout }}{{ end }} \
		./...
{{ end }}

# etcd
export MAKEFILE_ETCD_HOST := 127.0.0.1
export MAKEFILE_ETCD_PORT := 2379

ETCD_PID_FILE := ./etcd.pid

setup:
	$(eval export MAKEFILE_ETCD_DATA_DIR := $(shell mktemp -d))
	$(eval export MAKEFILE_ETCD_LOG_DIR  := $(shell mktemp))

	nohup etcd \
		--advertise-client-urls http://$(MAKEFILE_ETCD_HOST):$(MAKEFILE_ETCD_PORT) \
		--data-dir "$(MAKEFILE_ETCD_DATA_DIR)" \
		--listen-client-urls http://$(MAKEFILE_ETCD_HOST):$(MAKEFILE_ETCD_PORT) \
		--log-level=debug 2>"$(MAKEFILE_ETCD_LOG_DIR)" >/dev/null & echo $! > $(ETCD_PID_FILE)

	# hacky, wait for etcd to up
	sleep 20
	ps -p "$$(cat $(ETCD_PID_FILE))"

teardown:
	fuser -k $(MAKEFILE_ETCD_PORT)/tcp

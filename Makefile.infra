GOCD_CLIENT_NAME          := gocd_client
GOCD_SERVER_NAME          := gocd_server
GOCD_SERVER_ENV_FILE_PATH := ./gocd_server.env
GIT_SERVER_NAME           := git_server
GOCD_POSTGRESQL_NAME      := gocd_postgresql

GOCD_POSTGRESQL_PASSWORD := postgres

NUM_GOCD_CLIENTS_COMMON      ?= 2
NUM_GOCD_CLIENTS_E2E_CLUSTER ?= 1

pause_all_pipelines:
	./pause-all-pipelines.sh http://$(GOCD_SERVER_LISTEN_HOST):$(GOCD_SERVER_LISTEN_PORT)

unpause_all_pipelines:
	./unpause-all-pipelines.sh http://$(GOCD_SERVER_LISTEN_HOST):$(GOCD_SERVER_LISTEN_PORT)

enable_maintenance_mode:
	curl \
		-fsSL \
		-H 'Accept: application/vnd.go.cd.v1+json' \
		-H 'X-GoCD-Confirm:true' \
		-X POST \
		'http://$(GOCD_SERVER_LISTEN_HOST):$(GOCD_SERVER_LISTEN_PORT)/go/api/admin/maintenance_mode/enable'

disable_maintenance_mode:
	curl \
		-fsSL \
		-H 'Accept: application/vnd.go.cd.v1+json' \
		-H 'X-GoCD-Confirm:true' \
		-X POST \
		'http://$(GOCD_SERVER_LISTEN_HOST):$(GOCD_SERVER_LISTEN_PORT)/go/api/admin/maintenance_mode/disable'

run_gocd_clients_common: RUN_GOCD_CLIENTS_COMMON_GOCD_SERVER_LISTEN_HOST ?= $(GOCD_SERVER_LISTEN_HOST)
run_gocd_clients_common:
	for i in $$(seq 1 $(NUM_GOCD_CLIENTS_COMMON)); do \
		docker run \
			--cpus 1 \
			--detach \
			--tty \
			--privileged \
			--name $(GOCD_CLIENT_NAME)-common-$${i} \
			--group-add "$$(getent group docker | cut -d: -f3)" \
			--volume /var/run/docker.sock:/var/run/docker.sock \
			--env GO_SERVER_URL="http://$(RUN_GOCD_CLIENTS_COMMON_GOCD_SERVER_LISTEN_HOST):$(GOCD_SERVER_LISTEN_PORT)/go" \
			--env AGENT_AUTO_REGISTER_KEY="$(AGENT_AUTO_REGISTER_KEY)" \
			--env AGENT_AUTO_REGISTER_HOSTNAME="$(GOCD_CLIENT_NAME)-common-$$(hostname)-$${i}" \
			--env AGENT_AUTO_REGISTER_ENVIRONMENTS="common" \
			--ulimit nofile=65535:65535 \
			infra-gocd_client:latest; \
	done

start_gocd_clients_common:
	for i in $$(seq 1 $(NUM_GOCD_CLIENTS_COMMON)); do \
		docker start $(GOCD_CLIENT_NAME)-common-$${i}; \
	done


stop_gocd_clients_common:
	for i in $$(seq 1 $(NUM_GOCD_CLIENTS_COMMON)); do \
		docker stop $(GOCD_CLIENT_NAME)-common-$${i}; \
	done

delete_gocd_clients_common: stop_gocd_clients_common
	for i in $$(seq 1 $(NUM_GOCD_CLIENTS_COMMON)); do \
		docker rm $(GOCD_CLIENT_NAME)-common-$${i}; \
	done

run_gocd_clients_e2e_cluster: RUN_GOCD_CLIENTS_E2E_CLUSTER_GOCD_SERVER_LISTEN_HOST ?= $(GOCD_SERVER_LISTEN_HOST)
run_gocd_clients_e2e_cluster:
	for i in $$(seq 1 $(NUM_GOCD_CLIENTS_E2E_CLUSTER)); do \
		docker run \
			--cpus 1 \
			--detach \
			--tty \
			--privileged \
			--network=host \
			--name $(GOCD_CLIENT_NAME)-e2e-cluster-$${i} \
			--group-add "$$(getent group docker | cut -d: -f3)" \
			--volume /var/run/docker.sock:/var/run/docker.sock \
			--volume /etc/localtime:/etc/localtime \
			--env GO_SERVER_URL="http://$(RUN_GOCD_CLIENTS_E2E_CLUSTER_GOCD_SERVER_LISTEN_HOST):$(GOCD_SERVER_LISTEN_PORT)/go" \
			--env AGENT_AUTO_REGISTER_KEY="$(AGENT_AUTO_REGISTER_KEY)" \
			--env AGENT_AUTO_REGISTER_HOSTNAME="$(GOCD_CLIENT_NAME)-e2e-cluster-$$(hostname)-$${i}" \
			--env AGENT_AUTO_REGISTER_ENVIRONMENTS="e2e_cluster" \
			--ulimit nofile=65535:65535 \
			infra-gocd_client:latest; \
	done

start_gocd_clients_e2e_cluster:
	for i in $$(seq 1 $(NUM_GOCD_CLIENTS_E2E_CLUSTER)); do \
		docker start $(GOCD_CLIENT_NAME)-e2e-cluster-$${i}; \
	done


stop_gocd_clients_e2e_cluster:
	for i in $$(seq 1 $(NUM_GOCD_CLIENTS_E2E_CLUSTER)); do \
		docker stop $(GOCD_CLIENT_NAME)-e2e-cluster-$${i}; \
	done

delete_gocd_clients_e2e_cluster: stop_gocd_clients_e2e_cluster
	for i in $$(seq 1 $(NUM_GOCD_CLIENTS_E2E_CLUSTER)); do \
		docker rm $(GOCD_CLIENT_NAME)-e2e-cluster-$${i}; \
	done

run_gocd_clients: run_gocd_clients_common run_gocd_clients_e2e_cluster
start_gocd_clients: start_gocd_clients_common start_gocd_clients_e2e_cluster
stop_gocd_clients: stop_gocd_clients_common stop_gocd_clients_e2e_cluster
delete_gocd_clients: delete_gocd_clients_common delete_gocd_clients_e2e_cluster

run_gocd_server:
	docker run \
		--detach \
		--tty \
		--network=host \
		--name $(GOCD_SERVER_NAME) \
		--env-file $(GOCD_SERVER_ENV_FILE_PATH) \
		infra-gocd_server:latest

start_gocd_server:
	docker start $(GOCD_SERVER_NAME)

stop_gocd_server:
	docker stop $(GOCD_SERVER_NAME)

delete_gocd_server: stop_gocd_server
	docker rm $(GOCD_SERVER_NAME)

run_git_server:
	docker run \
		--detach \
		--tty \
		--name $(GIT_SERVER_NAME) \
		--volume $(GITS_DIRECTORY):/var/lib/git \
		--publish "$(GIT_SERVER_LISTEN_PORT):80" \
		--env HOME=/var/lib/git \
		infra-git_server:latest

start_git_server:
	docker start $(GIT_SERVER_NAME)

stop_git_server:
	docker stop $(GIT_SERVER_NAME)

delete_git_server: stop_git_server
	docker rm $(GIT_SERVER_NAME)

run_gocd_postgresql:
	docker run \
		--detach \
		--tty \
		--network=host \
		--name $(GOCD_POSTGRESQL_NAME) \
		--env POSTGRES_PASSWORD=$(GOCD_POSTGRESQL_PASSWORD) \
		infra-gocd_postgresql:latest

start_gocd_postgresql:
	docker start $(GOCD_POSTGRESQL_NAME)

stop_gocd_postgresql:
	docker stop $(GOCD_POSTGRESQL_NAME)

delete_gocd_postgresql: stop_gocd_postgresql
	docker rm $(GOCD_POSTGRESQL_NAME)

run_server_infra: run_gocd_server run_git_server run_gocd_postgresql
start_server_infra: start_gocd_server start_git_server start_gocd_postgresql
stop_server_infra: stop_gocd_server stop_git_server stop_gocd_postgresql
delete_server_infra: delete_gocd_server delete_git_server delete_gocd_postgresql

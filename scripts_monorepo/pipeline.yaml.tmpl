environments:
  common:
    pipelines:
      - monorepo_pipeline_common
  e2e_cluster:
    pipelines:
      - monorepo_pipeline_e2e
format_version: 10
pipelines:
  monorepo_pipeline_common:
    display_order: -1
    environment_variables:
      MATERIAL_NAME: monorepo_pipeline
    group: MONOREPO
    label_template: ${COUNT}
    lock_behavior: none
    materials:
      monorepo_material:
        auto_update: true
        branch: master
        git: http://{{ getenv "GIT_SERVER_LISTEN_HOST" }}:{{ getenv "GIT_SERVER_LISTEN_PORT" }}/monorepo/kubernetes.git
        shallow_clone: false
    stages:
      - build:
          approval:
            allow_only_on_success: false
            type: success
          clean_workspace: true
          fetch_materials: true
          jobs:
            all:
              artifacts: []
              tasks:
                - exec:
                    arguments:
                      - -c
                      - set -a; eval `go env`; set +a; ./build.sh
                    command: /bin/bash
                    run_if: passed
              timeout: 0
          keep_artifacts: false
      - test:
          approval:
            allow_only_on_success: false
            type: success
          clean_workspace: true
          fetch_materials: true
          jobs:
            all:
              artifacts: []
              tasks:
                - exec:
                    arguments:
                      - -c
                      - set -a; eval `go env`; set +a; ./test.sh
                    command: /bin/bash
                    run_if: passed
              timeout: 0
          keep_artifacts: false
      - integration:
          approval:
            allow_only_on_success: false
            type: success
          clean_workspace: true
          fetch_materials: true
          jobs:
            all:
              artifacts: []
              tasks:
                - exec:
                    arguments:
                      - -c
                      - set -a; eval `go env`; set +a; ./integration.sh
                    command: /bin/bash
                    run_if: passed
              timeout: 0
          keep_artifacts: false
      - e2e_cmd:
          approval:
            allow_only_on_success: false
            type: success
          clean_workspace: true
          fetch_materials: true
          jobs:
            all:
              artifacts: []
              tasks:
                - exec:
                    arguments:
                      - -c
                      - set -a; eval `go env`; set +a; ./e2e_cmd.sh
                    command: /bin/bash
                    run_if: passed
              timeout: 0
          keep_artifacts: false
  monorepo_pipeline_e2e:
    display_order: -1
    environment_variables:
      MATERIAL_NAME: monorepo_pipeline
    group: MONOREPO
    label_template: ${COUNT}
    lock_behavior: none
    materials:
      monorepo_material:
        auto_update: true
        branch: master
        git: http://{{ getenv "GIT_SERVER_LISTEN_HOST" }}:{{ getenv "GIT_SERVER_LISTEN_PORT" }}/monorepo/kubernetes.git
        shallow_clone: false
      monorepo_pipeline_common:
        ignore_for_scheduling: false
        pipeline: monorepo_pipeline_common
        stage: e2e_cmd
    stages:
      - e2e_cluster:
          approval:
            allow_only_on_success: false
            type: success
          clean_workspace: true
          fetch_materials: true
          jobs:
            all:
              artifacts: []
              tasks:
                - exec:
                    arguments:
                      - -c
                      - set -a; eval `go env`; set +a; make -f ./Makefile.e2e_cluster bootstrap
                    command: /bin/bash
                    run_if: passed
                - exec:
                    arguments:
                      - -c
                      - set -a; eval `go env`; set +a; make -f ./Makefile.e2e_cluster setup
                    command: /bin/bash
                    run_if: passed
                - exec:
                    arguments:
                      - -c
                      - set -a; eval `go env`; set +a; make -f ./Makefile.e2e_cluster cluster
                    command: /bin/bash
                    run_if: passed
                - exec:
                    arguments:
                      - -c
                      - set -a; eval `go env`; set +a; make -f ./Makefile.e2e_cluster teardown
                    command: /bin/bash
                    run_if: any
              timeout: 0
          keep_artifacts: false
